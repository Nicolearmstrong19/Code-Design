<!DOCTYPE HTML>
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
		<title>Canvas Test Using Double Buffering</title>
		<!--on button click call two functions-->
		<button onclick="clicks++; incrementer(); addFlakeA()">Add Red</button>
		<div id="red"></div>
		</div>
		<button onclick="clicks2++; incrementer2(); addFlakeB()">Add Blue</button>
		<div id="blue"></div>
		<!--<div class = "counter">
		<button type="button" onClick="clicks++; incrementer();">Click Me</button>-->


    <script>
    //declare variables
		var canvas = null;
		var context = null;
		var bufferCanvas = null;
		var bufferCanvasCtx = null;
		var flakeArray = [];
		var flakeTimer = null;
		var maxFlakes = 200;
			function Flake() { //function to set parameters
			    this.x = Math.round(Math.random() * context.canvas.width);
			    this.y = 450;
			    this.drift = Math.random();
			    this.speed = Math.round(Math.random() * -2) - 2;
			    this.width = (Math.random() * 70) + 40;
			    this.height = this.width;
			}
			
			function init() { //function to buffer
				canvas = document.getElementById('testCanvas');
				context = canvas.getContext("2d");
				
				bufferCanvas = document.createElement("canvas");
				bufferCanvasCtx = bufferCanvas.getContext("2d");
				bufferCanvasCtx.canvas.width = context.canvas.width;
				bufferCanvasCtx.canvas.height = context.canvas.height;
				// initialize the rects
				//flakeTimer = setInterval(addFlake, 10000);
		
				Draw();
				
				setInterval(animate, 30); //speed at what boxes will move
			
     
			}
			function addFlakeA() { //function to add flake to canvas when button A is pressed
			    flakeArray[flakeArray.length] = new Flake();
			    if (flakeArray.length == maxFlakes)
			        clearInterval(flakeTimer);
			}
			function addFlakeB() { //function to add flake to canvas when button B is pressed
				flakeArray[flakeArray.length] = new Flake();
				if (flakeArray.length == maxFlakes)
			        clearInterval(flakeTimer);
			}
			function blank() { //draw background
				bufferCanvasCtx.fillStyle = "#70baef";
				bufferCanvasCtx.fillRect(0,0,bufferCanvasCtx.canvas.width, bufferCanvasCtx.canvas.height);
			}
			function animate() { //begin animation
				Update();
				Draw();
			}
			//FLAKE A
			function Update() { //for loop to add flakes to canvas
			    for (var i = 0; i < flakeArray.length; i++) {
                    if (flakeArray[i].y < context.canvas.height) {
                        flakeArray[i].y += flakeArray[i].speed;
                        if (flakeArray[i].y > context.canvas.height)
                            flakeArray[i].y = -5;
                        flakeArray[i].x += flakeArray[i].drift;
                        if (flakeArray[i].x > context.canvas.width)
                            flakeArray[i].x = 0;
                    }
			    }
			}
			//FLAKE B
			function Update() { //for loop to add flakes to canvas
			    for (var i = 0; i < flakeArray.length; i++) {
                    if (flakeArray[i].y < context.canvas.height) {
                        flakeArray[i].y += flakeArray[i].speed;
                        if (flakeArray[i].y > context.canvas.height)
                            flakeArray[i].y = -5;
                        flakeArray[i].x += flakeArray[i].drift;
                        if (flakeArray[i].x > context.canvas.width)
                            flakeArray[i].x = 0;
                    }
			    }
			}
			
			function Draw(){
				context.save(); //pushes canvas' current state onto the stack
/*
				// create a clipping region
				bufferCanvasCtx.beginPath();
				bufferCanvasCtx.fillStyle="black";
				bufferCanvasCtx.fillRect(0,0,bufferCanvas.width,bufferCanvas.height);
				bufferCanvasCtx.arc(bufferCanvas.width/2,bufferCanvas.height/2,bufferCanvas.height/3,0,2*Math.PI);
				bufferCanvasCtx.clip();
*/
				blank();
				//FLAKE ARRAY A
				for (var i = 0; i < flakeArray.length; i++) {
				    bufferCanvasCtx.fillStyle = "#d84949";
				    bufferCanvasCtx.fillRect(flakeArray[i].x,flakeArray[i].y,flakeArray[i].width,flakeArray[i].height);
				    //bufferCanvasCtx.arc(280,y,70,0,Math.PI*2,true);
				    //bufferCanvasCtx.arc(flakeArray[i].x,flakeArray[i].y,flakeArray[i].width,flakeArray[i].height);
				}
				if (blue = true) {
					bufferCanvasCtx.fillStyle = "blue";
				} else {
					 bufferCanvasCtx.fillStyle = "red";
				}
				
				//FLAKE ARRAY B
				//for (var i = 0; i < flakeArray.length; i++) {
				  //  bufferCanvasCtx.fillStyle = "blue";
				  //  bufferCanvasCtx.fillRect(flakeArray[i].x,flakeArray[i].y,flakeArray[i].width,flakeArray[i].height);
				    //bufferCanvasCtx.arc(280,y,70,0,Math.PI*2,true);
				    //bufferCanvasCtx.arc(flakeArray[i].x,flakeArray[i].y,flakeArray[i].width,flakeArray[i].height);
				//}
				// copy the entire rendered image from the buffer canvas to the visible one
				context.drawImage(bufferCanvas, 0,0,bufferCanvas.width, bufferCanvas.height);
				context.restore();
			}
			//counter
				var clicks = 0; //set clicks variable at 0
				function incrementer() { //call incrementer function
				            document.getElementById("red").innerHTML = clicks;
				} 
				var clicks2 = 0; //set clicks variable at 0
				function incrementer2() { //call incrementer function
				            document.getElementById("blue").innerHTML = clicks2;
				} 
		</script>
	</head>
	<body onload="init()"> <!--run function on load of page-->
		<canvas id="testCanvas" width="1200" height="500">
		</canvas>

	</body>
</html>
